{"version":3,"sources":["../../src/view/view.types.ts"],"sourcesContent":["import type {\n  ConfigurationCellType,\n  ConfigurationFieldType,\n  ConfigurationSupportedPgDataType,\n} from 'kysely-codegen';\nimport { z } from 'zod';\n\nexport const PGDataFieldMap: Record<\n  ConfigurationSupportedPgDataType,\n  ConfigurationFieldType\n> = {\n  unknown: 'text',\n\n  array_integer: 'comboboxMulti',\n  array_text: 'comboboxMulti',\n  array_json: 'comboboxMulti',\n  array_jsonb: 'comboboxMulti',\n  array_boolean: 'comboboxMulti',\n  array_numeric: 'comboboxMulti',\n  array_varchar: 'comboboxMulti',\n  array_date: 'comboboxMulti',\n  array_timestamp: 'comboboxMulti',\n  bigint: 'number',\n  bigserial: 'number',\n  bit: 'text',\n  bit_varying: 'text',\n  boolean: 'checkbox',\n  box: 'text',\n  bytea: 'text',\n  character: 'text',\n  character_varying: 'text',\n  cidr: 'text',\n  circle: 'text',\n  date: 'datePicker',\n  double_precision: 'number',\n  enum: 'combobox',\n  float4: 'number',\n  float8: 'number',\n  inet: 'text',\n  integer: 'number',\n  interval: 'text',\n  json: 'text',\n  jsonb: 'text',\n  line: 'text',\n  lseg: 'text',\n  macaddr: 'text',\n  money: 'number',\n  numeric: 'number',\n  path: 'text',\n  point: 'text',\n  polygon: 'text',\n  real: 'number',\n  serial: 'number',\n  smallint: 'number',\n  smallserial: 'number',\n  text: 'text',\n  time: 'datePicker',\n  time_with_time_zone: 'datePicker',\n  timestamp: 'datePicker',\n  timestamp_with_time_zone: 'datePicker',\n  timestamp_without_time_zone: 'datePicker',\n  tsquery: 'text',\n  tsvector: 'text',\n  txid_snapshot: 'text',\n  uuid: 'text',\n  xml: 'text',\n};\n\nexport const PGDataCellMap: Record<\n  ConfigurationSupportedPgDataType,\n  ConfigurationCellType\n> = {\n  unknown: 'text',\n\n  array_integer: 'comboboxMulti',\n  array_text: 'comboboxMulti',\n  array_json: 'comboboxMulti',\n  array_jsonb: 'comboboxMulti',\n  array_boolean: 'comboboxMulti',\n  array_numeric: 'comboboxMulti',\n  array_varchar: 'comboboxMulti',\n  array_date: 'comboboxMulti',\n  array_timestamp: 'comboboxMulti',\n  bigint: 'number',\n  bigserial: 'number',\n  bit: 'text',\n  bit_varying: 'text',\n  boolean: 'checkbox',\n  box: 'text',\n  bytea: 'text',\n  character: 'text',\n  character_varying: 'text',\n  cidr: 'text',\n  circle: 'text',\n  date: 'datePicker',\n  double_precision: 'number',\n  enum: 'combobox',\n  float4: 'number',\n  float8: 'number',\n  inet: 'text',\n  integer: 'number',\n  interval: 'text',\n  json: 'text',\n  jsonb: 'text',\n  line: 'text',\n  lseg: 'text',\n  macaddr: 'text',\n  money: 'number',\n  numeric: 'number',\n  path: 'text',\n  point: 'text',\n  polygon: 'text',\n  real: 'number',\n  serial: 'number',\n  smallint: 'number',\n  smallserial: 'number',\n  text: 'text',\n  time: 'datePicker',\n  time_with_time_zone: 'datePicker',\n  timestamp: 'datePicker',\n  timestamp_with_time_zone: 'datePicker',\n  timestamp_without_time_zone: 'datePicker',\n  tsquery: 'text',\n  tsvector: 'text',\n  txid_snapshot: 'text',\n  uuid: 'text',\n  xml: 'text',\n};\n\nexport const PostgresSupportedDataTypeIdMap: Record<\n  number,\n  ConfigurationSupportedPgDataType\n> = {\n  20: 'bigint',\n  1560: 'bit',\n  1562: 'bit_varying',\n  16: 'boolean',\n  603: 'box',\n  17: 'bytea',\n  1042: 'character',\n  1043: 'character_varying',\n  650: 'cidr',\n  718: 'circle',\n  1082: 'date',\n  701: 'double_precision',\n  700: 'float4',\n  869: 'inet',\n  23: 'integer',\n  1186: 'interval',\n  114: 'json',\n  3802: 'jsonb',\n  628: 'line',\n  601: 'lseg',\n  829: 'macaddr',\n  790: 'money',\n  1700: 'numeric',\n  602: 'path',\n  600: 'point',\n  604: 'polygon',\n  25: 'text',\n  1083: 'time',\n  1266: 'time_with_time_zone',\n  1114: 'timestamp_without_time_zone',\n  1184: 'timestamp_with_time_zone',\n  3615: 'tsquery',\n  3614: 'tsvector',\n  2970: 'txid_snapshot',\n  2950: 'uuid',\n  142: 'xml',\n  1007: 'array_integer', // Array of integers\n  1009: 'array_text', // Array of text\n  199: 'array_json', // Array of JSON\n  3807: 'array_jsonb', // Array of JSONB\n  1005: 'array_boolean', // Array of booleans\n  1028: 'array_numeric', // Array of numeric\n  1016: 'array_varchar', // Array of varchar (character varying)\n  1029: 'array_date', // Array of dates\n  1011: 'array_timestamp', // Array of timestamps\n};\n\n// enum custom_column_type {\n//   // Text\n//   text\n//   jsonb\n//   array_text\n//   // Numbers\n//   int\n//   double_precision\n//   numeric\n//   array_numeric\n//   // Dates\n//   timestamp_with_time_zone\n//   date\n//   // Random\n//   boolean\n//   uuid\n\n//   @@schema(\"configuration\")\n// }\n\nexport const ViewDefinition = z.object({\n  table_name: z.string(),\n  view_definition: z.string().nullable(),\n  table_schema: z.string(),\n});\n"],"names":["z","PGDataFieldMap","unknown","array_integer","array_text","array_json","array_jsonb","array_boolean","array_numeric","array_varchar","array_date","array_timestamp","bigint","bigserial","bit","bit_varying","boolean","box","bytea","character","character_varying","cidr","circle","date","double_precision","enum","float4","float8","inet","integer","interval","json","jsonb","line","lseg","macaddr","money","numeric","path","point","polygon","real","serial","smallint","smallserial","text","time","time_with_time_zone","timestamp","timestamp_with_time_zone","timestamp_without_time_zone","tsquery","tsvector","txid_snapshot","uuid","xml","PGDataCellMap","PostgresSupportedDataTypeIdMap","ViewDefinition","object","table_name","string","view_definition","nullable","table_schema"],"mappings":"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"}