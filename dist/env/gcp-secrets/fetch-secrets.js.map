{"version":3,"sources":["../../../src/env/gcp-secrets/fetch-secrets.ts"],"sourcesContent":["import { SecretManagerServiceClient } from '@google-cloud/secret-manager';\nimport { ConfigService } from '@nestjs/config';\n\nexport const fetchGCPSecrets = async () => {\n  const client = new SecretManagerServiceClient();\n  const config = new ConfigService();\n\n  function getSecret(name: string) {\n    return client\n      .accessSecretVersion({\n        name: `projects/${config.get('GOOGLE_PROJECT')}/secrets/${name}/versions/latest`,\n      })\n      .then(res => {\n        const [response] = res;\n        return { [name]: response.payload?.data?.toString() };\n      });\n  }\n\n  try {\n    const secrets = await Promise.all([\n      getSecret('DATABASE_NAME'),\n      getSecret('DATABASE_HOST'),\n      getSecret('DATABASE_PASSWORD'),\n      getSecret('DATABASE_PORT'),\n      getSecret('DATABASE_USER'),\n      getSecret('GOOGLE_PROJECT'),\n    ]);\n    return secrets.reduce(\n      (current, accumulator) => ({ ...accumulator, ...current }),\n      {}\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["SecretManagerServiceClient","ConfigService","fetchGCPSecrets","client","config","getSecret","name","accessSecretVersion","get","then","res","response","payload","data","toString","secrets","Promise","all","reduce","current","accumulator","error"],"mappings":"AAAA,SAASA,0BAA0B,QAAQ,+BAA+B;AAC1E,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,OAAO,MAAMC,kBAAkB;IAC7B,MAAMC,SAAS,IAAIH;IACnB,MAAMI,SAAS,IAAIH;IAEnB,SAASI,UAAUC,IAAY;QAC7B,OAAOH,OACJI,mBAAmB,CAAC;YACnBD,MAAM,CAAC,SAAS,EAAEF,OAAOI,GAAG,CAAC,kBAAkB,SAAS,EAAEF,KAAK,gBAAgB,CAAC;QAClF,GACCG,IAAI,CAACC,CAAAA;YACJ,MAAM,CAACC,SAAS,GAAGD;YACnB,OAAO;gBAAE,CAACJ,KAAK,EAAEK,SAASC,OAAO,EAAEC,MAAMC;YAAW;QACtD;IACJ;IAEA,IAAI;QACF,MAAMC,UAAU,MAAMC,QAAQC,GAAG,CAAC;YAChCZ,UAAU;YACVA,UAAU;YACVA,UAAU;YACVA,UAAU;YACVA,UAAU;YACVA,UAAU;SACX;QACD,OAAOU,QAAQG,MAAM,CACnB,CAACC,SAASC,cAAiB,CAAA;gBAAE,GAAGA,WAAW;gBAAE,GAAGD,OAAO;YAAC,CAAA,GACxD,CAAC;IAEL,EAAE,OAAOE,OAAO;QACd,MAAMA;IACR;AACF,EAAE"}