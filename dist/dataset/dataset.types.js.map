{"version":3,"sources":["../../src/dataset/dataset.types.ts"],"sourcesContent":["import { z } from 'zod';\n// TODO: This while file is repeated in packages/utils so the FE can have access to the recursive types\n// DOnt have time right now to figure out the importingissue of utls into nestjs\n\n// Inputs\nconst DataviewColumnInputSchema = z.object({\n  role_column_name: z.string(),\n});\n\nconst DataviewInputSchema: z.ZodType = z.lazy(() =>\n  z.object({\n    role_view_name: z.string(),\n    constraint: z.string(),\n    dataview_column: z.array(DataviewColumnInputSchema),\n    dataview: z.array(DataviewInputSchema),\n  })\n);\n\nconst DatasetInputSchema = z.object({\n  name: z.string(),\n  id: z.string().optional(),\n  dataview_id: DataviewInputSchema,\n});\n\nconst RootDataViewInputSchema = z.object({\n  datasetId: z.string(),\n  role_view_name: z.string(),\n});\n\n// Outputs\nconst DataviewColumnOuputSchema = z.object({\n  role_column_name: z.string(),\n  role_view_name: z.string(),\n  dataview_id: z.string(),\n  label: z.string().nullable(),\n  order: z.number(),\n  ag_cell_data_type: z\n    .enum(['text', 'percentage', 'usd', 'date', 'timestamp', 'user'])\n    .nullable(), // TODO: get these enums from BE\n  ag_pinned: z.enum(['left', 'right']).nullable(),\n  ag_width: z.number(),\n  ag_minWidth: z.number(),\n  ag_flex: z.number().nullable(),\n  ag_editable: z.boolean(),\n  ag_resizable: z.boolean(),\n});\n\nconst BaseDataviewOutputSchema = z.object({\n  id: z.string(),\n  dataset_id: z.string(),\n  role_view_name: z.string(),\n  constraint: z.string(),\n  schema: z.string(),\n  parent_dataview_id: z.string().nullable(),\n  created_by_id: z.string(),\n  dataview_column: z.array(DataviewColumnOuputSchema).nullable(),\n});\n\nconst DataviewOutputSchema: z.ZodType<DataviewOutput> =\n  BaseDataviewOutputSchema.extend({\n    dataview: z.lazy(() => DataviewOutputSchema.array()).optional(),\n  });\n\nconst DatasetOutputSchema = z.object({\n  id: z.string(),\n  version: z.number(),\n  published: z.boolean(),\n  latest: z.boolean(),\n  published_at: z.date().nullable(),\n  published_by_id: z.string().nullable(),\n  created_by_id: z.string(),\n  original_id: z.string().nullable(),\n  created_at: z.date(),\n  name: z.string(),\n  description: z.string().nullable(),\n  query: z.string().nullable(),\n  dataview_id: z.string().nullable(),\n  dataview: DataviewOutputSchema.nullable(),\n  roleViews: z.array(z.string()).nullable(), // API adds this\n});\n\ntype DatasetInput = z.infer<typeof DatasetInputSchema>;\ntype DatasetOutput = z.infer<typeof DatasetOutputSchema>;\ntype DataviewOutput = z.infer<typeof BaseDataviewOutputSchema> & {\n  dataview?: DataviewOutput[];\n};\ntype RootDataViewInput = z.infer<typeof RootDataViewInputSchema>;\n\nexport {\n  DatasetInputSchema,\n  type DatasetInput,\n  DatasetOutputSchema,\n  type DatasetOutput,\n  type DataviewOutput,\n  DataviewOutputSchema,\n  RootDataViewInputSchema,\n  type RootDataViewInput,\n};\n"],"names":["z","DataviewColumnInputSchema","object","role_column_name","string","DataviewInputSchema","lazy","role_view_name","constraint","dataview_column","array","dataview","DatasetInputSchema","name","id","optional","dataview_id","RootDataViewInputSchema","datasetId","DataviewColumnOuputSchema","label","nullable","order","number","ag_cell_data_type","enum","ag_pinned","ag_width","ag_minWidth","ag_flex","ag_editable","boolean","ag_resizable","BaseDataviewOutputSchema","dataset_id","schema","parent_dataview_id","created_by_id","DataviewOutputSchema","extend","DatasetOutputSchema","version","published","latest","published_at","date","published_by_id","original_id","created_at","description","query","roleViews"],"mappings":"AAAA,SAASA,CAAC,QAAQ,MAAM;AACxB,uGAAuG;AACvG,gFAAgF;AAEhF,SAAS;AACT,MAAMC,4BAA4BD,EAAEE,MAAM,CAAC;IACzCC,kBAAkBH,EAAEI,MAAM;AAC5B;AAEA,MAAMC,sBAAiCL,EAAEM,IAAI,CAAC,IAC5CN,EAAEE,MAAM,CAAC;QACPK,gBAAgBP,EAAEI,MAAM;QACxBI,YAAYR,EAAEI,MAAM;QACpBK,iBAAiBT,EAAEU,KAAK,CAACT;QACzBU,UAAUX,EAAEU,KAAK,CAACL;IACpB;AAGF,MAAMO,qBAAqBZ,EAAEE,MAAM,CAAC;IAClCW,MAAMb,EAAEI,MAAM;IACdU,IAAId,EAAEI,MAAM,GAAGW,QAAQ;IACvBC,aAAaX;AACf;AAEA,MAAMY,0BAA0BjB,EAAEE,MAAM,CAAC;IACvCgB,WAAWlB,EAAEI,MAAM;IACnBG,gBAAgBP,EAAEI,MAAM;AAC1B;AAEA,UAAU;AACV,MAAMe,4BAA4BnB,EAAEE,MAAM,CAAC;IACzCC,kBAAkBH,EAAEI,MAAM;IAC1BG,gBAAgBP,EAAEI,MAAM;IACxBY,aAAahB,EAAEI,MAAM;IACrBgB,OAAOpB,EAAEI,MAAM,GAAGiB,QAAQ;IAC1BC,OAAOtB,EAAEuB,MAAM;IACfC,mBAAmBxB,EAChByB,IAAI,CAAC;QAAC;QAAQ;QAAc;QAAO;QAAQ;QAAa;KAAO,EAC/DJ,QAAQ;IACXK,WAAW1B,EAAEyB,IAAI,CAAC;QAAC;QAAQ;KAAQ,EAAEJ,QAAQ;IAC7CM,UAAU3B,EAAEuB,MAAM;IAClBK,aAAa5B,EAAEuB,MAAM;IACrBM,SAAS7B,EAAEuB,MAAM,GAAGF,QAAQ;IAC5BS,aAAa9B,EAAE+B,OAAO;IACtBC,cAAchC,EAAE+B,OAAO;AACzB;AAEA,MAAME,2BAA2BjC,EAAEE,MAAM,CAAC;IACxCY,IAAId,EAAEI,MAAM;IACZ8B,YAAYlC,EAAEI,MAAM;IACpBG,gBAAgBP,EAAEI,MAAM;IACxBI,YAAYR,EAAEI,MAAM;IACpB+B,QAAQnC,EAAEI,MAAM;IAChBgC,oBAAoBpC,EAAEI,MAAM,GAAGiB,QAAQ;IACvCgB,eAAerC,EAAEI,MAAM;IACvBK,iBAAiBT,EAAEU,KAAK,CAACS,2BAA2BE,QAAQ;AAC9D;AAEA,MAAMiB,uBACJL,yBAAyBM,MAAM,CAAC;IAC9B5B,UAAUX,EAAEM,IAAI,CAAC,IAAMgC,qBAAqB5B,KAAK,IAAIK,QAAQ;AAC/D;AAEF,MAAMyB,sBAAsBxC,EAAEE,MAAM,CAAC;IACnCY,IAAId,EAAEI,MAAM;IACZqC,SAASzC,EAAEuB,MAAM;IACjBmB,WAAW1C,EAAE+B,OAAO;IACpBY,QAAQ3C,EAAE+B,OAAO;IACjBa,cAAc5C,EAAE6C,IAAI,GAAGxB,QAAQ;IAC/ByB,iBAAiB9C,EAAEI,MAAM,GAAGiB,QAAQ;IACpCgB,eAAerC,EAAEI,MAAM;IACvB2C,aAAa/C,EAAEI,MAAM,GAAGiB,QAAQ;IAChC2B,YAAYhD,EAAE6C,IAAI;IAClBhC,MAAMb,EAAEI,MAAM;IACd6C,aAAajD,EAAEI,MAAM,GAAGiB,QAAQ;IAChC6B,OAAOlD,EAAEI,MAAM,GAAGiB,QAAQ;IAC1BL,aAAahB,EAAEI,MAAM,GAAGiB,QAAQ;IAChCV,UAAU2B,qBAAqBjB,QAAQ;IACvC8B,WAAWnD,EAAEU,KAAK,CAACV,EAAEI,MAAM,IAAIiB,QAAQ;AACzC;AASA,SACET,kBAAkB,EAElB4B,mBAAmB,EAGnBF,oBAAoB,EACpBrB,uBAAuB,GAEvB"}