{"version":3,"sources":["../../../src/auth/trpc/clerk-context.ts"],"sourcesContent":["import { Injectable, Logger } from '@nestjs/common';\nimport { type ContextOptions, type TRPCContext } from 'nestjs-trpc';\nimport { clerkClient } from '@clerk/clerk-sdk-node';\nimport { TRPCError } from '@trpc/server';\n\n@Injectable()\nexport class AppContext implements TRPCContext {\n  private readonly logger = new Logger(AppContext.name);\n\n  async create({ req, res }: ContextOptions): Promise<Record<string, unknown>> {\n    const token = req.headers.authorization?.split(' ')[1];\n    if (!token) {\n      throw new TRPCError({ code: 'UNAUTHORIZED', message: 'Missing token' });\n    }\n    try {\n      const clerkclaims = await clerkClient.verifyToken(token);\n      if (!token) {\n        throw new TRPCError({ code: 'UNAUTHORIZED', message: 'Missing token' });\n      }\n\n      if (!clerkclaims.environment) {\n        throw new TRPCError({\n          code: 'UNAUTHORIZED',\n          message: 'Missing environment',\n        });\n      }\n\n      return {\n        clerkclaims,\n      };\n    } catch (error) {\n      this.logger.error(`Invalid clerk token: ${error}`);\n      throw new TRPCError({ code: 'UNAUTHORIZED', message: 'Invalid token' });\n    }\n  }\n}\n"],"names":["Injectable","Logger","clerkClient","TRPCError","AppContext","create","req","res","token","headers","authorization","split","code","message","clerkclaims","verifyToken","environment","error","logger","name"],"mappings":";;;;;;AAAA,SAASA,UAAU,EAAEC,MAAM,QAAQ,iBAAiB;AAEpD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,SAAS,QAAQ,eAAe;AAGzC,OAAO,MAAMC;IAGX,MAAMC,OAAO,EAAEC,GAAG,EAAEC,GAAG,EAAkB,EAAoC;QAC3E,MAAMC,QAAQF,IAAIG,OAAO,CAACC,aAAa,EAAEC,MAAM,IAAI,CAAC,EAAE;QACtD,IAAI,CAACH,OAAO;YACV,MAAM,IAAIL,UAAU;gBAAES,MAAM;gBAAgBC,SAAS;YAAgB;QACvE;QACA,IAAI;YACF,MAAMC,cAAc,MAAMZ,YAAYa,WAAW,CAACP;YAClD,IAAI,CAACA,OAAO;gBACV,MAAM,IAAIL,UAAU;oBAAES,MAAM;oBAAgBC,SAAS;gBAAgB;YACvE;YAEA,IAAI,CAACC,YAAYE,WAAW,EAAE;gBAC5B,MAAM,IAAIb,UAAU;oBAClBS,MAAM;oBACNC,SAAS;gBACX;YACF;YAEA,OAAO;gBACLC;YACF;QACF,EAAE,OAAOG,OAAO;YACd,IAAI,CAACC,MAAM,CAACD,KAAK,CAAC,CAAC,qBAAqB,EAAEA,OAAO;YACjD,MAAM,IAAId,UAAU;gBAAES,MAAM;gBAAgBC,SAAS;YAAgB;QACvE;IACF;;aA3BiBK,SAAS,IAAIjB,OAAOG,WAAWe,IAAI;;AA4BtD"}